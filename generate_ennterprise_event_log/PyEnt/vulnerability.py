# -*- coding: utf-8 -*-

import json

from ._internal_utils import status_code_check, response_status_check, convert_date_time

import logging
log = logging.getLogger(__name__)


class Vulnerability(object):
    def __init__(self, console_url, session=None):
        self._console_url = console_url
        self._session = session

    @property
    def session(self):
        return self._session

    @session.setter
    def session(self, value):
        self._session = value

    def import_vul(self, local_file):
        """
        Import vulnerability info file
        :param local_file: vulnerability info file
        :return: None
        """
        uri = self._console_url + '/security/vulnerability/import'
        with open(local_file) as pf:
            for l in pf:
                content = l.strip()
                if not content:
                    continue
                response = self._session.post(uri, json=content)
                response_content = json.loads(response.content)
                status_code_check(response.status_code, 200)
                response_status_check(response_content['statusCode'], 0, response_content['messages'])

    def run_score(self):
        uri = self._console_url + '/security/risk/run-score'
        payload = {
            "script_name": "score_all",
        }
        response = self._session.post(uri, json=payload)
        # response_content = json.loads(response.content)
        status_code_check(response.status_code, 200)
        # response_status_check(response_content['statusCode'], 0, response_content['messages'])
